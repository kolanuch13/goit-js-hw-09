{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAeH,SAASC,cAAc,mBAG5C,SAASG,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACXA,YAAW,WACLH,EACFF,EAAQ,qBAAoCM,OAAfT,EAAS,QAAqCS,OAA/BR,EAAMS,OAAOhB,EAAWiB,OAAO,OAE3EP,EAAO,oBAAmCK,OAAfT,EAAS,QAAqCS,OAA/BR,EAAMS,OAAOhB,EAAWiB,OAAO,M,GAE1EV,E,GACAP,EAAWiB,M,IAbLhB,SAASC,cAAc,QAkB/BgB,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAaa,MAAOI,IACvChB,EAAcgB,EAAGL,OAAOb,EAAUc,OAAOI,GACxCC,MAAK,SAAAC,GACJC,EAAA1B,GAAS2B,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,GACLJ,EAAA1B,GAAS2B,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst delaysAmount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay+Number(firstDelay.value)}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay+Number(firstDelay.value)}ms`);\n      }\n    }, delay);\n    }, firstDelay.value)\n    })\n  return promise;\n};\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  for (let i = 1; i <= delaysAmount.value; i++) {\n    createPromise(i, Number(delayStep.value)*i)\n    .then(result => {\n      Notiflix.Notify.success(result);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    })\n  }\n})\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$delaysAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","Number","value","addEventListener","event","preventDefault","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.ac579018.js.map"}